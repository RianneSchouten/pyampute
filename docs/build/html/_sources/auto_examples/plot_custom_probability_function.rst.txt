
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_custom_probability_function.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_plot_custom_probability_function.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_custom_probability_function.py:


============================================
Amputing with a Custom Probability Function
============================================

.. GENERATED FROM PYTHON SOURCE LINES 8-16

.. code-block:: default

    """
    Create complete data.
    """
    import numpy as np

    n = 10000
    X = np.random.randn(n, 2)








.. GENERATED FROM PYTHON SOURCE LINES 17-30

.. code-block:: default

    """
    Define custom probability function.
    """
    # purely for demonstrative type hints
    from pyampute import ArrayLike


    # Must produce values between 0 and 1
    def min_max_scale(X: ArrayLike) -> ArrayLike:
        X_abs = np.abs(X)
        return (X_abs - X_abs.min()) / (X_abs.max() - X_abs.min())









.. GENERATED FROM PYTHON SOURCE LINES 31-53

.. code-block:: default

    """
    Define some patterns.
    Include the custom score to probability function in whichever pattern(s) you desire.
    """
    my_incomplete_vars = [np.array([0]), np.array([1]), np.array([1])]
    my_freqs = np.array((0.3, 0.2, 0.5))
    my_weights = [np.array([4, 1]), np.array([0, 1]), np.array([1, 0])]
    my_score_to_probability_funcs = [min_max_scale, "sigmoid-right", "sigmoid-right"]
    my_prop = 0.3

    patterns = [
        {
            "incomplete_vars": incomplete_vars,
            "freq": freq,
            "weights": weights,
            "score_to_probability_func": score_to_probability_func,
        }
        for incomplete_vars, freq, weights, score_to_probability_func in zip(
            my_incomplete_vars, my_freqs, my_weights, my_score_to_probability_funcs
        )
    ]








.. GENERATED FROM PYTHON SOURCE LINES 54-62

.. code-block:: default

    """
    Run ampute.
    """
    from pyampute import MultivariateAmputation

    ma = MultivariateAmputation(prop=my_prop, patterns=patterns)
    incomplete_data = ma.fit_transform(X)








.. GENERATED FROM PYTHON SOURCE LINES 63-68

.. code-block:: default

    from pyampute.exploration.md_patterns import mdPatterns

    mdp = mdPatterns()
    pattern = mdp.get_patterns(incomplete_data)



.. rst-class:: sphx-glr-script-out

.. code-block:: pytb

    Traceback (most recent call last):
      File "/Users/davina/Documents/Stuff/Code/pyampute/examples/plot_custom_probability_function.py", line 66, in <module>
        pattern = mdp.get_patterns(incomplete_data)
      File "/Users/davina/Documents/Stuff/Code/pyampute/pyampute/exploration/md_patterns.py", line 80, in get_patterns
        self._make_plot()
      File "/Users/davina/Documents/Stuff/Code/pyampute/pyampute/exploration/md_patterns.py", line 150, in _make_plot
        ax.imshow(heat_values, aspect="auto", cmap=cmap)
      File "/Users/davina/miniconda3/envs/pymice/lib/python3.9/site-packages/matplotlib/_api/deprecation.py", line 456, in wrapper
        return func(*args, **kwargs)
      File "/Users/davina/miniconda3/envs/pymice/lib/python3.9/site-packages/matplotlib/__init__.py", line 1412, in inner
        return func(ax, *map(sanitize_sequence, args), **kwargs)
      File "/Users/davina/miniconda3/envs/pymice/lib/python3.9/site-packages/matplotlib/axes/_axes.py", line 5442, in imshow
        im.set_data(X)
      File "/Users/davina/miniconda3/envs/pymice/lib/python3.9/site-packages/matplotlib/image.py", line 706, in set_data
        raise TypeError("Image data of dtype {} cannot be converted to "
    TypeError: Image data of dtype object cannot be converted to float





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.136 seconds)


.. _sphx_glr_download_auto_examples_plot_custom_probability_function.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_custom_probability_function.py <plot_custom_probability_function.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_custom_probability_function.ipynb <plot_custom_probability_function.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
