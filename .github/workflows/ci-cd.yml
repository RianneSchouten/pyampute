# This workflow will run continuous integration and deployment.
# References:
# https://py-pkgs.org/08-ci-cd
# https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
# https://www.caktusgroup.com/blog/2021/02/11/automating-pypi-releases/
# NOTE: WIP we have not set up semantic release versioning.

name: ci-cd

on:
  release:
    types: [created]

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install setuptools wheel twine 
    
    - name: Test with unittest
      run: |
      python -m unittest

    - name: Build documentation
      run: cd docs && make html

  cd:
    needs: ci  # only run if "ci" passes

    runs-on: ubuntu-latest

    steps:
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9

    - name: Check-out repository
      uses: actions/checkout@v2
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine

    - name: Build
      run: python setup.py sdist bdist_wheel

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.TEST_PYPI_API_TOKEN }}
        repository_url: https://test.pypi.org/legacy/

    - name: Test install from TestPyPI
      run: |
          pip install \
          --index-url https://test.pypi.org/simple/ \
          --extra-index-url https://pypi.org/simple \
          pyampute

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
